name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --with dev
    - name: Lint with flake8
      run: |
        poetry run pre-commit run
    - name: Test with pytest
      run: |
        poetry run pytest --cov RatS --cov-report term-missing --cov-report xml
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      with:
        api-token: ${{ secrets.CODACY_API_TOKEN }}
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: coverage.xml
        language: python
      env:
        CODACY_API_TOKEN: ${{ secrets.CODACY_API_TOKEN }}
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        CODACY_USERNAME: ${{ github.GITHUB_REPOSITORY_OWNER }}
        CODACY_PROJECT_NAME: RatS

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_name == 'master'
    permissions:
      id-token: write
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish package to GitHub Release
      uses: python-semantic-release/upload-to-gh-release@v9.8.3
      if: steps.release.outputs.released == 'true'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.release.outputs.tag }}
